import camelot
import cv2
import pdfplumber
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å Camelot
tables = camelot.read_pdf("downloaded_pdf_files/Finaliz_proced_reorg_2021_2024.pdf", pages="1", flavor="lattice")

image = tables[0].get_pdf_image()

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ OpenCV-—Ñ–æ—Ä–º–∞—Ç (grayscale)
image_cv = cv2.cvtColor(image, cv2.COLOR_RGB2GRAY)

# –ë–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
_, thresh = cv2.threshold(image_cv, 128, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

# –ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π
horizontal_kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (40, 1))
horizontal_lines_img = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, horizontal_kernel, iterations=2)

# –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç—É—Ä–æ–≤
contours, _ = cv2.findContours(horizontal_lines_img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# –ü–æ–ª—É—á–∞–µ–º –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã PDF
with pdfplumber.open("downloaded_pdf_files/Finaliz_proced_reorg_2021_2024.pdf") as pdf:
    page_height = pdf.pages[0].height

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ OpenCV –≤ PDF-–ø–æ–¥–æ–±–Ω—ã–µ
converted_coords = []
for c in contours:
    x, y, w, h = cv2.boundingRect(c)
    pdf_x0 = x
    pdf_y0 = page_height - (y + h)
    pdf_x1 = x + w
    pdf_y1 = page_height - y
    converted_coords.append((pdf_x0, pdf_y0, pdf_x1, pdf_y1))

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print("üìê –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è pdfplumber:")
for i, bbox in enumerate(sorted(converted_coords, key=lambda b: b[1], reverse=True), 1):
    print(f"{i}: {bbox}")
